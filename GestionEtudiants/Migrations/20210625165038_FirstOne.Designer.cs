// <auto-generated />
using System;
using GestionEtudiants.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionEtudiants.Migrations
{
    [DbContext(typeof(myContext))]
    [Migration("20210625165038_FirstOne")]
    partial class FirstOne
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FiliereModule", b =>
                {
                    b.Property<int>("filieresid")
                        .HasColumnType("int");

                    b.Property<int>("modulesid")
                        .HasColumnType("int");

                    b.HasKey("filieresid", "modulesid");

                    b.HasIndex("modulesid");

                    b.ToTable("FiliereModule");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Absence", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_etudiant")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_etudiant");

                    b.ToTable("Absences");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Document", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_etudiant")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_etudiant");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.Property<int>("apogee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("academie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("annee_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("code_promo")
                        .HasColumnType("int");

                    b.Property<string>("ddn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("delegation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diplome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ecole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("filiere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname_fr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_inscription")
                        .HasColumnType("int");

                    b.Property<string>("lastname_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname_fr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ldn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lycee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("massar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mention_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("natio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parents_adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parents_phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("validated")
                        .HasColumnType("int");

                    b.Property<string>("ville_diplome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("apogee");

                    b.HasIndex("id_inscription");

                    b.ToTable("Etudiants");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Filiere", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Filieres");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("annee_uni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_filiere")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_filiere");

                    b.ToTable("Inscriptions");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_professeur")
                        .HasColumnType("int");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_professeur");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Note", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("evaluation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_module")
                        .HasColumnType("int");

                    b.Property<int?>("id_type")
                        .HasColumnType("int");

                    b.Property<string>("semestre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_module");

                    b.HasIndex("id_type");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Professeur", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("tel")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Proffesseurs");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("FiliereModule", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Filiere", null)
                        .WithMany()
                        .HasForeignKey("filieresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEtudiants.Models.Module", null)
                        .WithMany()
                        .HasForeignKey("modulesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionEtudiants.Models.Absence", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Etudiant", "Etudiant")
                        .WithMany("absences")
                        .HasForeignKey("id_etudiant");

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Document", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Etudiant", "Etudiant")
                        .WithMany("documents")
                        .HasForeignKey("id_etudiant");

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Inscription", "Inscription")
                        .WithMany("etudiants")
                        .HasForeignKey("id_inscription");

                    b.Navigation("Inscription");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Filiere", "Filiere")
                        .WithMany("inscriptions")
                        .HasForeignKey("id_filiere");

                    b.Navigation("Filiere");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Professeur", "Professeur")
                        .WithMany("modules")
                        .HasForeignKey("id_professeur");

                    b.Navigation("Professeur");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Note", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Module", "Module")
                        .WithMany("notes")
                        .HasForeignKey("id_module");

                    b.HasOne("GestionEtudiants.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("id_type");

                    b.Navigation("Module");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.Navigation("absences");

                    b.Navigation("documents");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Filiere", b =>
                {
                    b.Navigation("inscriptions");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.Navigation("etudiants");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.Navigation("notes");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Professeur", b =>
                {
                    b.Navigation("modules");
                });
#pragma warning restore 612, 618
        }
    }
}
