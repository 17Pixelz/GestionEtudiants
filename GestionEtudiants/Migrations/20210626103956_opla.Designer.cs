// <auto-generated />
using System;
using GestionEtudiants.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionEtudiants.Migrations
{
    [DbContext(typeof(myContext))]
    [Migration("20210626103956_opla")]
    partial class opla
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FiliereModule", b =>
                {
                    b.Property<int>("filieresid")
                        .HasColumnType("int");

                    b.Property<int>("modulesid")
                        .HasColumnType("int");

                    b.HasKey("filieresid", "modulesid");

                    b.HasIndex("modulesid");

                    b.ToTable("FiliereModule");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Absence", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("N_fois")
                        .HasColumnType("int");

                    b.Property<int?>("id_etudiant")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_etudiant");

                    b.ToTable("Absences");

                    b.HasData(
                        new
                        {
                            id = 1,
                            N_fois = 13,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 2,
                            N_fois = 2,
                            id_etudiant = 2009
                        },
                        new
                        {
                            id = 3,
                            N_fois = 0,
                            id_etudiant = 2005
                        },
                        new
                        {
                            id = 4,
                            N_fois = 3,
                            id_etudiant = 2001
                        },
                        new
                        {
                            id = 5,
                            N_fois = 13,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 6,
                            N_fois = 8,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 7,
                            N_fois = 2,
                            id_etudiant = 2002
                        },
                        new
                        {
                            id = 8,
                            N_fois = 1,
                            id_etudiant = 2009
                        },
                        new
                        {
                            id = 9,
                            N_fois = 13,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 10,
                            N_fois = 2,
                            id_etudiant = 2009
                        },
                        new
                        {
                            id = 11,
                            N_fois = 10,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 12,
                            N_fois = 5,
                            id_etudiant = 2003
                        },
                        new
                        {
                            id = 13,
                            N_fois = 9,
                            id_etudiant = 2002
                        },
                        new
                        {
                            id = 14,
                            N_fois = 4,
                            id_etudiant = 2005
                        },
                        new
                        {
                            id = 15,
                            N_fois = 13,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 16,
                            N_fois = 13,
                            id_etudiant = 2005
                        },
                        new
                        {
                            id = 17,
                            N_fois = 6,
                            id_etudiant = 2005
                        },
                        new
                        {
                            id = 18,
                            N_fois = 3,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 19,
                            N_fois = 2,
                            id_etudiant = 2000
                        },
                        new
                        {
                            id = 20,
                            N_fois = 3,
                            id_etudiant = 2005
                        },
                        new
                        {
                            id = 21,
                            N_fois = 15,
                            id_etudiant = 2004
                        },
                        new
                        {
                            id = 22,
                            N_fois = 5,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 23,
                            N_fois = 14,
                            id_etudiant = 2001
                        },
                        new
                        {
                            id = 24,
                            N_fois = 15,
                            id_etudiant = 2003
                        },
                        new
                        {
                            id = 25,
                            N_fois = 14,
                            id_etudiant = 2001
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Document", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_etudiant")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_etudiant");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            id = 1,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 2,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 3,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 4,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 5,
                            id_etudiant = 2008,
                            type = "B"
                        },
                        new
                        {
                            id = 6,
                            id_etudiant = 2007,
                            type = "A"
                        },
                        new
                        {
                            id = 7,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 8,
                            id_etudiant = 2009,
                            type = "C"
                        },
                        new
                        {
                            id = 9,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 10,
                            id_etudiant = 2002,
                            type = "A"
                        },
                        new
                        {
                            id = 11,
                            id_etudiant = 2008,
                            type = "C"
                        },
                        new
                        {
                            id = 12,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 13,
                            id_etudiant = 2001,
                            type = "C"
                        },
                        new
                        {
                            id = 14,
                            id_etudiant = 2005,
                            type = "B"
                        },
                        new
                        {
                            id = 15,
                            id_etudiant = 2004,
                            type = "B"
                        },
                        new
                        {
                            id = 16,
                            id_etudiant = 2008,
                            type = "A"
                        },
                        new
                        {
                            id = 17,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 18,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 19,
                            id_etudiant = 2008,
                            type = "B"
                        },
                        new
                        {
                            id = 20,
                            id_etudiant = 2001,
                            type = "C"
                        },
                        new
                        {
                            id = 21,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 22,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 23,
                            id_etudiant = 2002,
                            type = "A"
                        },
                        new
                        {
                            id = 24,
                            id_etudiant = 2002,
                            type = "A"
                        },
                        new
                        {
                            id = 25,
                            id_etudiant = 2008,
                            type = "C"
                        },
                        new
                        {
                            id = 26,
                            id_etudiant = 2003,
                            type = "C"
                        },
                        new
                        {
                            id = 27,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 28,
                            id_etudiant = 2005,
                            type = "B"
                        },
                        new
                        {
                            id = 29,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 30,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 31,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 32,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 33,
                            id_etudiant = 2004,
                            type = "B"
                        },
                        new
                        {
                            id = 34,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 35,
                            id_etudiant = 2000,
                            type = "C"
                        },
                        new
                        {
                            id = 36,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 37,
                            id_etudiant = 2009,
                            type = "B"
                        },
                        new
                        {
                            id = 38,
                            id_etudiant = 2003,
                            type = "C"
                        },
                        new
                        {
                            id = 39,
                            id_etudiant = 2000,
                            type = "A"
                        },
                        new
                        {
                            id = 40,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 41,
                            id_etudiant = 2001,
                            type = "A"
                        },
                        new
                        {
                            id = 42,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 43,
                            id_etudiant = 2008,
                            type = "B"
                        },
                        new
                        {
                            id = 44,
                            id_etudiant = 2009,
                            type = "B"
                        },
                        new
                        {
                            id = 45,
                            id_etudiant = 2008,
                            type = "A"
                        },
                        new
                        {
                            id = 46,
                            id_etudiant = 2001,
                            type = "A"
                        },
                        new
                        {
                            id = 47,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 48,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 49,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 50,
                            id_etudiant = 2008,
                            type = "C"
                        },
                        new
                        {
                            id = 51,
                            id_etudiant = 2004,
                            type = "A"
                        },
                        new
                        {
                            id = 52,
                            id_etudiant = 2008,
                            type = "B"
                        },
                        new
                        {
                            id = 53,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 54,
                            id_etudiant = 2003,
                            type = "C"
                        },
                        new
                        {
                            id = 55,
                            id_etudiant = 2000,
                            type = "C"
                        },
                        new
                        {
                            id = 56,
                            id_etudiant = 2005,
                            type = "A"
                        },
                        new
                        {
                            id = 57,
                            id_etudiant = 2009,
                            type = "C"
                        },
                        new
                        {
                            id = 58,
                            id_etudiant = 2005,
                            type = "B"
                        },
                        new
                        {
                            id = 59,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 60,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 61,
                            id_etudiant = 2000,
                            type = "C"
                        },
                        new
                        {
                            id = 62,
                            id_etudiant = 2008,
                            type = "B"
                        },
                        new
                        {
                            id = 63,
                            id_etudiant = 2003,
                            type = "C"
                        },
                        new
                        {
                            id = 64,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 65,
                            id_etudiant = 2002,
                            type = "B"
                        },
                        new
                        {
                            id = 66,
                            id_etudiant = 2005,
                            type = "A"
                        },
                        new
                        {
                            id = 67,
                            id_etudiant = 2005,
                            type = "A"
                        },
                        new
                        {
                            id = 68,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 69,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 70,
                            id_etudiant = 2008,
                            type = "A"
                        },
                        new
                        {
                            id = 71,
                            id_etudiant = 2003,
                            type = "A"
                        },
                        new
                        {
                            id = 72,
                            id_etudiant = 2002,
                            type = "A"
                        },
                        new
                        {
                            id = 73,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 74,
                            id_etudiant = 2003,
                            type = "A"
                        },
                        new
                        {
                            id = 75,
                            id_etudiant = 2009,
                            type = "A"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.Property<int>("apogee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("academie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("annee_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ddn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("delegation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diplome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ecole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("filiere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname_fr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_inscription")
                        .HasColumnType("int");

                    b.Property<string>("lastname_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname_fr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ldn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lycee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("massar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mention_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("natio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parents_adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parents_phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("validated")
                        .HasColumnType("int");

                    b.Property<string>("ville_diplome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("apogee");

                    b.HasIndex("id_inscription");

                    b.ToTable("Etudiants");

                    b.HasData(
                        new
                        {
                            apogee = 2000,
                            cin = "EE30565",
                            email = "Katherine.Feest@hotmail.com",
                            id_inscription = 5,
                            nom = "Feest",
                            password = "0000",
                            prenom = "Katherine",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2001,
                            cin = "EE20610",
                            email = "Victor.Fadel98@yahoo.com",
                            id_inscription = 9,
                            nom = "Fadel",
                            password = "0000",
                            prenom = "Victor",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2002,
                            cin = "EE59037",
                            email = "Terry69@yahoo.com",
                            id_inscription = 4,
                            nom = "Powlowski",
                            password = "0000",
                            prenom = "Terry",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2003,
                            cin = "EE34458",
                            email = "Laurie_Kovacek66@hotmail.com",
                            id_inscription = 1,
                            nom = "Kovacek",
                            password = "0000",
                            prenom = "Laurie",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2004,
                            cin = "EE6013",
                            email = "Stewart72@yahoo.com",
                            id_inscription = 8,
                            nom = "Roob",
                            password = "0000",
                            prenom = "Stewart",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2005,
                            cin = "EE46732",
                            email = "Brad.Keeling@yahoo.com",
                            id_inscription = 9,
                            nom = "Keeling",
                            password = "0000",
                            prenom = "Brad",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2006,
                            cin = "EE30125",
                            email = "Kurt54@hotmail.com",
                            id_inscription = 3,
                            nom = "Brekke",
                            password = "0000",
                            prenom = "Kurt",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2007,
                            cin = "EE33772",
                            email = "Stuart10@hotmail.com",
                            id_inscription = 9,
                            nom = "Harvey",
                            password = "0000",
                            prenom = "Stuart",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2008,
                            cin = "EE109",
                            email = "Regina.Harris9@hotmail.com",
                            id_inscription = 6,
                            nom = "Harris",
                            password = "0000",
                            prenom = "Regina",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2009,
                            cin = "EE32226",
                            email = "Terry.Mueller92@yahoo.com",
                            id_inscription = 2,
                            nom = "Mueller",
                            password = "0000",
                            prenom = "Terry",
                            sexe = "Male",
                            validated = 1
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Filiere", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Filieres");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nom = "GINFO"
                        },
                        new
                        {
                            id = 2,
                            nom = "GTR"
                        },
                        new
                        {
                            id = 3,
                            nom = "GPMC"
                        },
                        new
                        {
                            id = 4,
                            nom = "GINDUS"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("annee_uni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_filiere")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_filiere");

                    b.ToTable("Inscriptions");

                    b.HasData(
                        new
                        {
                            id = 1,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        },
                        new
                        {
                            id = 2,
                            annee_uni = "2020/2021",
                            id_filiere = 1
                        },
                        new
                        {
                            id = 3,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        },
                        new
                        {
                            id = 4,
                            annee_uni = "2020/2021",
                            id_filiere = 3
                        },
                        new
                        {
                            id = 5,
                            annee_uni = "2020/2021",
                            id_filiere = 3
                        },
                        new
                        {
                            id = 6,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        },
                        new
                        {
                            id = 7,
                            annee_uni = "2020/2021",
                            id_filiere = 1
                        },
                        new
                        {
                            id = 8,
                            annee_uni = "2020/2021",
                            id_filiere = 3
                        },
                        new
                        {
                            id = 9,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        },
                        new
                        {
                            id = 10,
                            annee_uni = "2020/2021",
                            id_filiere = 4
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_professeur")
                        .HasColumnType("int");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_professeur");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            id = 1,
                            id_professeur = 4,
                            nom = "Buckinghamshire Plains Organic"
                        },
                        new
                        {
                            id = 2,
                            id_professeur = 1,
                            nom = "array Groves Frozen"
                        },
                        new
                        {
                            id = 3,
                            id_professeur = 6,
                            nom = "Grass-roots withdrawal back-end"
                        },
                        new
                        {
                            id = 4,
                            id_professeur = 15,
                            nom = "approach Garden, Automotive & Electronics Throughway"
                        },
                        new
                        {
                            id = 5,
                            id_professeur = 4,
                            nom = "Garden 24/365 Phased"
                        },
                        new
                        {
                            id = 6,
                            id_professeur = 10,
                            nom = "Incredible application Forint"
                        },
                        new
                        {
                            id = 7,
                            id_professeur = 22,
                            nom = "Savings Account quantifying Mississippi"
                        },
                        new
                        {
                            id = 8,
                            id_professeur = 21,
                            nom = "Ferry Expressway Investment Account"
                        },
                        new
                        {
                            id = 9,
                            id_professeur = 22,
                            nom = "THX Corporate Cambridgeshire"
                        },
                        new
                        {
                            id = 10,
                            id_professeur = 6,
                            nom = "quantifying Personal Loan Account generate"
                        },
                        new
                        {
                            id = 11,
                            id_professeur = 5,
                            nom = "Berkshire Pass alarm"
                        },
                        new
                        {
                            id = 12,
                            id_professeur = 23,
                            nom = "Ergonomic Rubber Chair models HTTP"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Note", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("evaluation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_module")
                        .HasColumnType("int");

                    b.Property<int?>("id_type")
                        .HasColumnType("int");

                    b.Property<string>("semestre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_module");

                    b.HasIndex("id_type");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            evaluation = "conglomeration",
                            id_module = 8,
                            id_type = 1,
                            semestre = "0",
                            valeur = "14"
                        },
                        new
                        {
                            id = 2,
                            evaluation = "Borders",
                            id_module = 8,
                            id_type = 1,
                            semestre = "2",
                            valeur = "16"
                        },
                        new
                        {
                            id = 3,
                            evaluation = "solid state",
                            id_module = 3,
                            id_type = 2,
                            semestre = "1",
                            valeur = "13"
                        },
                        new
                        {
                            id = 4,
                            evaluation = "Personal Loan Account",
                            id_module = 11,
                            id_type = 3,
                            semestre = "0",
                            valeur = "16"
                        },
                        new
                        {
                            id = 5,
                            evaluation = "enable",
                            id_module = 9,
                            id_type = 2,
                            semestre = "1",
                            valeur = "1"
                        },
                        new
                        {
                            id = 6,
                            evaluation = "index",
                            id_module = 12,
                            id_type = 3,
                            semestre = "0",
                            valeur = "7"
                        },
                        new
                        {
                            id = 7,
                            evaluation = "quantify",
                            id_module = 3,
                            id_type = 1,
                            semestre = "1",
                            valeur = "17"
                        },
                        new
                        {
                            id = 8,
                            evaluation = "e-markets",
                            id_module = 4,
                            id_type = 1,
                            semestre = "1",
                            valeur = "18"
                        },
                        new
                        {
                            id = 9,
                            evaluation = "Handmade Concrete Salad",
                            id_module = 3,
                            id_type = 2,
                            semestre = "2",
                            valeur = "12"
                        },
                        new
                        {
                            id = 10,
                            evaluation = "Avon",
                            id_module = 5,
                            id_type = 2,
                            semestre = "2",
                            valeur = "9"
                        },
                        new
                        {
                            id = 11,
                            evaluation = "Western Sahara",
                            id_module = 2,
                            id_type = 1,
                            semestre = "1",
                            valeur = "16"
                        },
                        new
                        {
                            id = 12,
                            evaluation = "Pakistan Rupee",
                            id_module = 4,
                            id_type = 1,
                            semestre = "2",
                            valeur = "6"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Professeur", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Proffesseurs");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE779357",
                            email = "Sandra_King@yahoo.com",
                            nom = "King",
                            prenom = "Sandra",
                            tel = "1-583-633-6062 x59144"
                        },
                        new
                        {
                            id = 2,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE489766",
                            email = "Owen_Davis94@hotmail.com",
                            nom = "Davis",
                            prenom = "Owen",
                            tel = "626.963.8857 x001"
                        },
                        new
                        {
                            id = 3,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE772121",
                            email = "Geraldine.Corkery17@gmail.com",
                            nom = "Corkery",
                            prenom = "Geraldine",
                            tel = "704.875.8925"
                        },
                        new
                        {
                            id = 4,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE974492",
                            email = "Blake60@gmail.com",
                            nom = "Baumbach",
                            prenom = "Blake",
                            tel = "878-637-6505"
                        },
                        new
                        {
                            id = 5,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE254001",
                            email = "Colin47@hotmail.com",
                            nom = "Baumbach",
                            prenom = "Colin",
                            tel = "215.243.8707 x1048"
                        },
                        new
                        {
                            id = 6,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE174914",
                            email = "Mae.Dach59@yahoo.com",
                            nom = "Dach",
                            prenom = "Mae",
                            tel = "1-617-495-3177"
                        },
                        new
                        {
                            id = 7,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE939118",
                            email = "Julian.Pouros@gmail.com",
                            nom = "Pouros",
                            prenom = "Julian",
                            tel = "675.759.3271 x3574"
                        },
                        new
                        {
                            id = 8,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE859833",
                            email = "Zachary_Wintheiser35@hotmail.com",
                            nom = "Wintheiser",
                            prenom = "Zachary",
                            tel = "303-637-5532 x7676"
                        },
                        new
                        {
                            id = 9,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE969188",
                            email = "Ana.Kemmer93@gmail.com",
                            nom = "Kemmer",
                            prenom = "Ana",
                            tel = "1-482-423-4818 x61007"
                        },
                        new
                        {
                            id = 10,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE789015",
                            email = "Kari80@hotmail.com",
                            nom = "Nader",
                            prenom = "Kari",
                            tel = "928.605.4762"
                        },
                        new
                        {
                            id = 11,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE397633",
                            email = "Raquel_Casper@gmail.com",
                            nom = "Casper",
                            prenom = "Raquel",
                            tel = "(721) 903-5625 x66101"
                        },
                        new
                        {
                            id = 12,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE499991",
                            email = "Tasha_Sipes@yahoo.com",
                            nom = "Sipes",
                            prenom = "Tasha",
                            tel = "(690) 825-3181 x82636"
                        },
                        new
                        {
                            id = 13,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE761665",
                            email = "Eunice_Bednar34@gmail.com",
                            nom = "Bednar",
                            prenom = "Eunice",
                            tel = "(562) 240-0313 x673"
                        },
                        new
                        {
                            id = 14,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE261329",
                            email = "Tomas47@gmail.com",
                            nom = "Franecki",
                            prenom = "Tomas",
                            tel = "1-768-271-8560"
                        },
                        new
                        {
                            id = 15,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE208017",
                            email = "Lynda81@gmail.com",
                            nom = "Botsford",
                            prenom = "Lynda",
                            tel = "(364) 786-0002"
                        },
                        new
                        {
                            id = 16,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE576798",
                            email = "Deborah14@gmail.com",
                            nom = "Auer",
                            prenom = "Deborah",
                            tel = "(645) 686-6875"
                        },
                        new
                        {
                            id = 17,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE65235",
                            email = "Crystal_Goodwin35@hotmail.com",
                            nom = "Goodwin",
                            prenom = "Crystal",
                            tel = "482.798.6181 x95600"
                        },
                        new
                        {
                            id = 18,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE958236",
                            email = "Maxine_Morar@gmail.com",
                            nom = "Morar",
                            prenom = "Maxine",
                            tel = "(307) 815-7865"
                        },
                        new
                        {
                            id = 19,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE614681",
                            email = "Horace_Deckow@gmail.com",
                            nom = "Deckow",
                            prenom = "Horace",
                            tel = "810.454.4360 x9567"
                        },
                        new
                        {
                            id = 20,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE296997",
                            email = "Lee10@yahoo.com",
                            nom = "Kemmer",
                            prenom = "Lee",
                            tel = "394.416.1053 x41285"
                        },
                        new
                        {
                            id = 21,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE689398",
                            email = "William31@gmail.com",
                            nom = "Pacocha",
                            prenom = "William",
                            tel = "333.265.2510"
                        },
                        new
                        {
                            id = 22,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE355168",
                            email = "Dave_Streich11@yahoo.com",
                            nom = "Streich",
                            prenom = "Dave",
                            tel = "(317) 905-9691"
                        },
                        new
                        {
                            id = 23,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE267342",
                            email = "Marie.Baumbach15@gmail.com",
                            nom = "Baumbach",
                            prenom = "Marie",
                            tel = "1-466-716-0981"
                        },
                        new
                        {
                            id = 24,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE839643",
                            email = "Chad_Weimann@gmail.com",
                            nom = "Weimann",
                            prenom = "Chad",
                            tel = "(497) 750-3754 x714"
                        },
                        new
                        {
                            id = 25,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE649313",
                            email = "Todd.Reichert30@yahoo.com",
                            nom = "Reichert",
                            prenom = "Todd",
                            tel = "822.432.1798"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            id = 1,
                            valeur = "DS1"
                        },
                        new
                        {
                            id = 2,
                            valeur = "DS2"
                        },
                        new
                        {
                            id = 3,
                            valeur = "RAT"
                        });
                });

            modelBuilder.Entity("FiliereModule", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Filiere", null)
                        .WithMany()
                        .HasForeignKey("filieresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEtudiants.Models.Module", null)
                        .WithMany()
                        .HasForeignKey("modulesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GestionEtudiants.Models.Absence", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Etudiant", "Etudiant")
                        .WithMany("absences")
                        .HasForeignKey("id_etudiant");

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Document", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Etudiant", "Etudiant")
                        .WithMany("documents")
                        .HasForeignKey("id_etudiant");

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Inscription", "Inscription")
                        .WithMany("etudiants")
                        .HasForeignKey("id_inscription");

                    b.Navigation("Inscription");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Filiere", "Filiere")
                        .WithMany("inscriptions")
                        .HasForeignKey("id_filiere");

                    b.Navigation("Filiere");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Professeur", "Professeur")
                        .WithMany("modules")
                        .HasForeignKey("id_professeur");

                    b.Navigation("Professeur");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Note", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Module", "Module")
                        .WithMany("notes")
                        .HasForeignKey("id_module");

                    b.HasOne("GestionEtudiants.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("id_type");

                    b.Navigation("Module");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.Navigation("absences");

                    b.Navigation("documents");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Filiere", b =>
                {
                    b.Navigation("inscriptions");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.Navigation("etudiants");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.Navigation("notes");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Professeur", b =>
                {
                    b.Navigation("modules");
                });
#pragma warning restore 612, 618
        }
    }
}
