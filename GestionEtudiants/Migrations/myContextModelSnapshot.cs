// <auto-generated />
using System;
using GestionEtudiants.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionEtudiants.Migrations
{
    [DbContext(typeof(myContext))]
    partial class myContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestionEtudiants.Models.Absence", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("N_fois")
                        .HasColumnType("int");

                    b.Property<int?>("id_etudiant")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_etudiant");

                    b.ToTable("Absences");

                    b.HasData(
                        new
                        {
                            id = 1,
                            N_fois = 10,
                            id_etudiant = 2000
                        },
                        new
                        {
                            id = 2,
                            N_fois = 13,
                            id_etudiant = 2005
                        },
                        new
                        {
                            id = 3,
                            N_fois = 14,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 4,
                            N_fois = 5,
                            id_etudiant = 2001
                        },
                        new
                        {
                            id = 5,
                            N_fois = 7,
                            id_etudiant = 2005
                        },
                        new
                        {
                            id = 6,
                            N_fois = 4,
                            id_etudiant = 2003
                        },
                        new
                        {
                            id = 7,
                            N_fois = 2,
                            id_etudiant = 2008
                        },
                        new
                        {
                            id = 8,
                            N_fois = 1,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 9,
                            N_fois = 0,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 10,
                            N_fois = 15,
                            id_etudiant = 2001
                        },
                        new
                        {
                            id = 11,
                            N_fois = 1,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 12,
                            N_fois = 9,
                            id_etudiant = 2002
                        },
                        new
                        {
                            id = 13,
                            N_fois = 6,
                            id_etudiant = 2008
                        },
                        new
                        {
                            id = 14,
                            N_fois = 1,
                            id_etudiant = 2000
                        },
                        new
                        {
                            id = 15,
                            N_fois = 1,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 16,
                            N_fois = 4,
                            id_etudiant = 2005
                        },
                        new
                        {
                            id = 17,
                            N_fois = 4,
                            id_etudiant = 2005
                        },
                        new
                        {
                            id = 18,
                            N_fois = 9,
                            id_etudiant = 2001
                        },
                        new
                        {
                            id = 19,
                            N_fois = 8,
                            id_etudiant = 2004
                        },
                        new
                        {
                            id = 20,
                            N_fois = 3,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 21,
                            N_fois = 3,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 22,
                            N_fois = 14,
                            id_etudiant = 2003
                        },
                        new
                        {
                            id = 23,
                            N_fois = 2,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 24,
                            N_fois = 9,
                            id_etudiant = 2009
                        },
                        new
                        {
                            id = 25,
                            N_fois = 1,
                            id_etudiant = 2009
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Document", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_etudiant")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_etudiant");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            id = 1,
                            id_etudiant = 2000,
                            type = "C"
                        },
                        new
                        {
                            id = 2,
                            id_etudiant = 2008,
                            type = "C"
                        },
                        new
                        {
                            id = 3,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 4,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 5,
                            id_etudiant = 2000,
                            type = "A"
                        },
                        new
                        {
                            id = 6,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 7,
                            id_etudiant = 2008,
                            type = "A"
                        },
                        new
                        {
                            id = 8,
                            id_etudiant = 2007,
                            type = "A"
                        },
                        new
                        {
                            id = 9,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 10,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 11,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 12,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 13,
                            id_etudiant = 2003,
                            type = "C"
                        },
                        new
                        {
                            id = 14,
                            id_etudiant = 2002,
                            type = "C"
                        },
                        new
                        {
                            id = 15,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 16,
                            id_etudiant = 2001,
                            type = "A"
                        },
                        new
                        {
                            id = 17,
                            id_etudiant = 2001,
                            type = "C"
                        },
                        new
                        {
                            id = 18,
                            id_etudiant = 2002,
                            type = "C"
                        },
                        new
                        {
                            id = 19,
                            id_etudiant = 2004,
                            type = "B"
                        },
                        new
                        {
                            id = 20,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 21,
                            id_etudiant = 2008,
                            type = "C"
                        },
                        new
                        {
                            id = 22,
                            id_etudiant = 2001,
                            type = "A"
                        },
                        new
                        {
                            id = 23,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 24,
                            id_etudiant = 2001,
                            type = "B"
                        },
                        new
                        {
                            id = 25,
                            id_etudiant = 2004,
                            type = "A"
                        },
                        new
                        {
                            id = 26,
                            id_etudiant = 2009,
                            type = "B"
                        },
                        new
                        {
                            id = 27,
                            id_etudiant = 2001,
                            type = "C"
                        },
                        new
                        {
                            id = 28,
                            id_etudiant = 2002,
                            type = "C"
                        },
                        new
                        {
                            id = 29,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 30,
                            id_etudiant = 2006,
                            type = "C"
                        },
                        new
                        {
                            id = 31,
                            id_etudiant = 2002,
                            type = "A"
                        },
                        new
                        {
                            id = 32,
                            id_etudiant = 2004,
                            type = "B"
                        },
                        new
                        {
                            id = 33,
                            id_etudiant = 2004,
                            type = "C"
                        },
                        new
                        {
                            id = 34,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 35,
                            id_etudiant = 2009,
                            type = "C"
                        },
                        new
                        {
                            id = 36,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 37,
                            id_etudiant = 2005,
                            type = "A"
                        },
                        new
                        {
                            id = 38,
                            id_etudiant = 2004,
                            type = "A"
                        },
                        new
                        {
                            id = 39,
                            id_etudiant = 2002,
                            type = "A"
                        },
                        new
                        {
                            id = 40,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 41,
                            id_etudiant = 2006,
                            type = "C"
                        },
                        new
                        {
                            id = 42,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 43,
                            id_etudiant = 2003,
                            type = "A"
                        },
                        new
                        {
                            id = 44,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 45,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 46,
                            id_etudiant = 2009,
                            type = "B"
                        },
                        new
                        {
                            id = 47,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 48,
                            id_etudiant = 2004,
                            type = "B"
                        },
                        new
                        {
                            id = 49,
                            id_etudiant = 2008,
                            type = "A"
                        },
                        new
                        {
                            id = 50,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 51,
                            id_etudiant = 2005,
                            type = "B"
                        },
                        new
                        {
                            id = 52,
                            id_etudiant = 2001,
                            type = "A"
                        },
                        new
                        {
                            id = 53,
                            id_etudiant = 2000,
                            type = "A"
                        },
                        new
                        {
                            id = 54,
                            id_etudiant = 2002,
                            type = "C"
                        },
                        new
                        {
                            id = 55,
                            id_etudiant = 2003,
                            type = "C"
                        },
                        new
                        {
                            id = 56,
                            id_etudiant = 2003,
                            type = "C"
                        },
                        new
                        {
                            id = 57,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 58,
                            id_etudiant = 2005,
                            type = "C"
                        },
                        new
                        {
                            id = 59,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 60,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 61,
                            id_etudiant = 2005,
                            type = "A"
                        },
                        new
                        {
                            id = 62,
                            id_etudiant = 2002,
                            type = "B"
                        },
                        new
                        {
                            id = 63,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 64,
                            id_etudiant = 2003,
                            type = "A"
                        },
                        new
                        {
                            id = 65,
                            id_etudiant = 2007,
                            type = "A"
                        },
                        new
                        {
                            id = 66,
                            id_etudiant = 2004,
                            type = "A"
                        },
                        new
                        {
                            id = 67,
                            id_etudiant = 2005,
                            type = "C"
                        },
                        new
                        {
                            id = 68,
                            id_etudiant = 2001,
                            type = "B"
                        },
                        new
                        {
                            id = 69,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 70,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 71,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 72,
                            id_etudiant = 2000,
                            type = "C"
                        },
                        new
                        {
                            id = 73,
                            id_etudiant = 2002,
                            type = "C"
                        },
                        new
                        {
                            id = 74,
                            id_etudiant = 2004,
                            type = "B"
                        },
                        new
                        {
                            id = 75,
                            id_etudiant = 2008,
                            type = "C"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.Property<int>("apogee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("academie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("annee_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ddn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("delegation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diplome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ecole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("filiere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname_fr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_inscription")
                        .HasColumnType("int");

                    b.Property<string>("lastname_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname_fr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ldn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lycee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("massar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mention_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("natio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parents_adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parents_phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("validated")
                        .HasColumnType("int");

                    b.Property<string>("ville_diplome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("apogee");

                    b.HasIndex("id_inscription");

                    b.ToTable("Etudiants");

                    b.HasData(
                        new
                        {
                            apogee = 2000,
                            cin = "EE6406",
                            email = "Antoinette_Fahey@yahoo.com",
                            id_inscription = 6,
                            nom = "Fahey",
                            password = "0000",
                            prenom = "Antoinette",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2001,
                            cin = "EE58834",
                            email = "Chelsea_Zemlak@gmail.com",
                            id_inscription = 4,
                            nom = "Zemlak",
                            password = "0000",
                            prenom = "Chelsea",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2002,
                            cin = "EE39510",
                            email = "Molly_Bruen@gmail.com",
                            id_inscription = 1,
                            nom = "Bruen",
                            password = "0000",
                            prenom = "Molly",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2003,
                            cin = "EE24228",
                            email = "Roberta_Williamson@yahoo.com",
                            id_inscription = 6,
                            nom = "Williamson",
                            password = "0000",
                            prenom = "Roberta",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2004,
                            cin = "EE34030",
                            email = "Nichole_Schmitt@gmail.com",
                            id_inscription = 2,
                            nom = "Schmitt",
                            password = "0000",
                            prenom = "Nichole",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2005,
                            cin = "EE35969",
                            email = "Minnie_Langosh66@yahoo.com",
                            id_inscription = 5,
                            nom = "Langosh",
                            password = "0000",
                            prenom = "Minnie",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2006,
                            cin = "EE43268",
                            email = "Wallace49@yahoo.com",
                            id_inscription = 10,
                            nom = "Langosh",
                            password = "0000",
                            prenom = "Wallace",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2007,
                            cin = "EE19201",
                            email = "Sonya.Botsford@gmail.com",
                            id_inscription = 3,
                            nom = "Botsford",
                            password = "0000",
                            prenom = "Sonya",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2008,
                            cin = "EE53330",
                            email = "Delia.Lueilwitz86@yahoo.com",
                            id_inscription = 9,
                            nom = "Lueilwitz",
                            password = "0000",
                            prenom = "Delia",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2009,
                            cin = "EE59426",
                            email = "Connie_Osinski@yahoo.com",
                            id_inscription = 2,
                            nom = "Osinski",
                            password = "0000",
                            prenom = "Connie",
                            sexe = "Female",
                            validated = 1
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Filiere", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Filieres");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nom = "GINFO"
                        },
                        new
                        {
                            id = 2,
                            nom = "GTR"
                        },
                        new
                        {
                            id = 3,
                            nom = "GPMC"
                        },
                        new
                        {
                            id = 4,
                            nom = "GINDUS"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.FiliereModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FiliereId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("ModuleId");

                    b.ToTable("FiliereModules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FiliereId = 2,
                            ModuleId = 5
                        },
                        new
                        {
                            Id = 2,
                            FiliereId = 1,
                            ModuleId = 5
                        },
                        new
                        {
                            Id = 3,
                            FiliereId = 4,
                            ModuleId = 7
                        },
                        new
                        {
                            Id = 4,
                            FiliereId = 4,
                            ModuleId = 12
                        },
                        new
                        {
                            Id = 5,
                            FiliereId = 4,
                            ModuleId = 10
                        },
                        new
                        {
                            Id = 6,
                            FiliereId = 3,
                            ModuleId = 10
                        },
                        new
                        {
                            Id = 7,
                            FiliereId = 1,
                            ModuleId = 2
                        },
                        new
                        {
                            Id = 8,
                            FiliereId = 2,
                            ModuleId = 3
                        },
                        new
                        {
                            Id = 9,
                            FiliereId = 4,
                            ModuleId = 7
                        },
                        new
                        {
                            Id = 10,
                            FiliereId = 3,
                            ModuleId = 8
                        },
                        new
                        {
                            Id = 11,
                            FiliereId = 1,
                            ModuleId = 2
                        },
                        new
                        {
                            Id = 12,
                            FiliereId = 2,
                            ModuleId = 6
                        },
                        new
                        {
                            Id = 13,
                            FiliereId = 4,
                            ModuleId = 11
                        },
                        new
                        {
                            Id = 14,
                            FiliereId = 3,
                            ModuleId = 9
                        },
                        new
                        {
                            Id = 15,
                            FiliereId = 1,
                            ModuleId = 7
                        },
                        new
                        {
                            Id = 16,
                            FiliereId = 3,
                            ModuleId = 10
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("annee_uni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_filiere")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_filiere");

                    b.ToTable("Inscriptions");

                    b.HasData(
                        new
                        {
                            id = 1,
                            annee_uni = "2020/2021",
                            id_filiere = 3
                        },
                        new
                        {
                            id = 2,
                            annee_uni = "2020/2021",
                            id_filiere = 4
                        },
                        new
                        {
                            id = 3,
                            annee_uni = "2020/2021",
                            id_filiere = 4
                        },
                        new
                        {
                            id = 4,
                            annee_uni = "2020/2021",
                            id_filiere = 1
                        },
                        new
                        {
                            id = 5,
                            annee_uni = "2020/2021",
                            id_filiere = 3
                        },
                        new
                        {
                            id = 6,
                            annee_uni = "2020/2021",
                            id_filiere = 4
                        },
                        new
                        {
                            id = 7,
                            annee_uni = "2020/2021",
                            id_filiere = 1
                        },
                        new
                        {
                            id = 8,
                            annee_uni = "2020/2021",
                            id_filiere = 4
                        },
                        new
                        {
                            id = 9,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        },
                        new
                        {
                            id = 10,
                            annee_uni = "2020/2021",
                            id_filiere = 3
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_professeur")
                        .HasColumnType("int");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_professeur");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            id = 1,
                            id_professeur = 12,
                            nom = "Ergonomic Fresh Bacon website New York"
                        },
                        new
                        {
                            id = 2,
                            id_professeur = 10,
                            nom = "compressing Guinea-Bissau Operations"
                        },
                        new
                        {
                            id = 3,
                            id_professeur = 5,
                            nom = "bus Investment Account orange"
                        },
                        new
                        {
                            id = 4,
                            id_professeur = 10,
                            nom = "Assistant PCI eyeballs"
                        },
                        new
                        {
                            id = 5,
                            id_professeur = 8,
                            nom = "copy orchid recontextualize"
                        },
                        new
                        {
                            id = 6,
                            id_professeur = 12,
                            nom = "Handmade silver JSON"
                        },
                        new
                        {
                            id = 7,
                            id_professeur = 1,
                            nom = "customized Communications payment"
                        },
                        new
                        {
                            id = 8,
                            id_professeur = 23,
                            nom = "compressing Assurance programming"
                        },
                        new
                        {
                            id = 9,
                            id_professeur = 15,
                            nom = "Kids & Games markets Unbranded Plastic Fish"
                        },
                        new
                        {
                            id = 10,
                            id_professeur = 8,
                            nom = "California deposit Loop"
                        },
                        new
                        {
                            id = 11,
                            id_professeur = 19,
                            nom = "deliverables invoice Legacy"
                        },
                        new
                        {
                            id = 12,
                            id_professeur = 14,
                            nom = "Iraqi Dinar Program upward-trending"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Note", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("evaluation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_module")
                        .HasColumnType("int");

                    b.Property<int?>("id_type")
                        .HasColumnType("int");

                    b.Property<string>("semestre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_module");

                    b.HasIndex("id_type");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            evaluation = "local area network",
                            id_module = 5,
                            id_type = 1,
                            semestre = "0",
                            valeur = "17"
                        },
                        new
                        {
                            id = 2,
                            evaluation = "e-markets",
                            id_module = 11,
                            id_type = 2,
                            semestre = "1",
                            valeur = "4"
                        },
                        new
                        {
                            id = 3,
                            evaluation = "synergistic",
                            id_module = 2,
                            id_type = 2,
                            semestre = "0",
                            valeur = "17"
                        },
                        new
                        {
                            id = 4,
                            evaluation = "Gorgeous Steel Hat",
                            id_module = 5,
                            id_type = 2,
                            semestre = "1",
                            valeur = "17"
                        },
                        new
                        {
                            id = 5,
                            evaluation = "Fresh",
                            id_module = 9,
                            id_type = 3,
                            semestre = "1",
                            valeur = "0"
                        },
                        new
                        {
                            id = 6,
                            evaluation = "payment",
                            id_module = 1,
                            id_type = 2,
                            semestre = "2",
                            valeur = "16"
                        },
                        new
                        {
                            id = 7,
                            evaluation = "Louisiana",
                            id_module = 8,
                            id_type = 3,
                            semestre = "2",
                            valeur = "5"
                        },
                        new
                        {
                            id = 8,
                            evaluation = "Money Market Account",
                            id_module = 9,
                            id_type = 3,
                            semestre = "0",
                            valeur = "0"
                        },
                        new
                        {
                            id = 9,
                            evaluation = "Belgium",
                            id_module = 3,
                            id_type = 3,
                            semestre = "0",
                            valeur = "19"
                        },
                        new
                        {
                            id = 10,
                            evaluation = "system",
                            id_module = 1,
                            id_type = 3,
                            semestre = "0",
                            valeur = "15"
                        },
                        new
                        {
                            id = 11,
                            evaluation = "Massachusetts",
                            id_module = 4,
                            id_type = 2,
                            semestre = "0",
                            valeur = "0"
                        },
                        new
                        {
                            id = 12,
                            evaluation = "Principal",
                            id_module = 10,
                            id_type = 3,
                            semestre = "1",
                            valeur = "17"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Professeur", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Proffesseurs");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE345121",
                            email = "Albert.Pacocha@hotmail.com",
                            nom = "Pacocha",
                            prenom = "Albert",
                            tel = "(320) 406-7248 x131"
                        },
                        new
                        {
                            id = 2,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE315928",
                            email = "Troy_Howe@gmail.com",
                            nom = "Howe",
                            prenom = "Troy",
                            tel = "1-319-432-2020"
                        },
                        new
                        {
                            id = 3,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE382781",
                            email = "Roxanne.Welch@hotmail.com",
                            nom = "Welch",
                            prenom = "Roxanne",
                            tel = "692.839.1222"
                        },
                        new
                        {
                            id = 4,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE451528",
                            email = "Tyrone14@hotmail.com",
                            nom = "Bahringer",
                            prenom = "Tyrone",
                            tel = "1-798-699-5942 x85156"
                        },
                        new
                        {
                            id = 5,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE444675",
                            email = "Kenneth.Kub@hotmail.com",
                            nom = "Kub",
                            prenom = "Kenneth",
                            tel = "798-217-0453 x25460"
                        },
                        new
                        {
                            id = 6,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE311356",
                            email = "Shelley_Muller33@gmail.com",
                            nom = "Muller",
                            prenom = "Shelley",
                            tel = "1-591-510-2932 x8751"
                        },
                        new
                        {
                            id = 7,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE52628",
                            email = "Emma74@gmail.com",
                            nom = "Dooley",
                            prenom = "Emma",
                            tel = "413.609.0609"
                        },
                        new
                        {
                            id = 8,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE47803",
                            email = "Jackie.Jakubowski@gmail.com",
                            nom = "Jakubowski",
                            prenom = "Jackie",
                            tel = "1-672-892-2035 x985"
                        },
                        new
                        {
                            id = 9,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE815580",
                            email = "Rene61@yahoo.com",
                            nom = "Bins",
                            prenom = "Rene",
                            tel = "633-952-3346 x6017"
                        },
                        new
                        {
                            id = 10,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE52484",
                            email = "Terence28@yahoo.com",
                            nom = "Lynch",
                            prenom = "Terence",
                            tel = "1-297-663-7980"
                        },
                        new
                        {
                            id = 11,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE114855",
                            email = "Krista72@yahoo.com",
                            nom = "Bruen",
                            prenom = "Krista",
                            tel = "959-445-9453"
                        },
                        new
                        {
                            id = 12,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE898851",
                            email = "Lucas.Kovacek91@hotmail.com",
                            nom = "Kovacek",
                            prenom = "Lucas",
                            tel = "613-934-8295 x41143"
                        },
                        new
                        {
                            id = 13,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE257235",
                            email = "Melvin_Homenick7@gmail.com",
                            nom = "Homenick",
                            prenom = "Melvin",
                            tel = "740.808.8061 x36418"
                        },
                        new
                        {
                            id = 14,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE983883",
                            email = "Phillip96@hotmail.com",
                            nom = "Marks",
                            prenom = "Phillip",
                            tel = "374-417-5964 x280"
                        },
                        new
                        {
                            id = 15,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE347967",
                            email = "Darlene_Konopelski14@hotmail.com",
                            nom = "Konopelski",
                            prenom = "Darlene",
                            tel = "773-856-7808 x4427"
                        },
                        new
                        {
                            id = 16,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE13183",
                            email = "Roy63@gmail.com",
                            nom = "Parker",
                            prenom = "Roy",
                            tel = "1-868-394-8100"
                        },
                        new
                        {
                            id = 17,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE183659",
                            email = "Kelli.OConner@gmail.com",
                            nom = "O'Conner",
                            prenom = "Kelli",
                            tel = "681.909.4695 x001"
                        },
                        new
                        {
                            id = 18,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE108048",
                            email = "Sabrina67@yahoo.com",
                            nom = "Gerlach",
                            prenom = "Sabrina",
                            tel = "475.895.0797 x130"
                        },
                        new
                        {
                            id = 19,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE643092",
                            email = "Ben83@hotmail.com",
                            nom = "Cremin",
                            prenom = "Ben",
                            tel = "689.231.2312"
                        },
                        new
                        {
                            id = 20,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE171407",
                            email = "Silvia.Kunze@hotmail.com",
                            nom = "Kunze",
                            prenom = "Silvia",
                            tel = "(827) 406-7784 x422"
                        },
                        new
                        {
                            id = 21,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE625741",
                            email = "Roxanne_Kiehn@hotmail.com",
                            nom = "Kiehn",
                            prenom = "Roxanne",
                            tel = "(248) 901-2008 x45370"
                        },
                        new
                        {
                            id = 22,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE180197",
                            email = "Lawrence94@hotmail.com",
                            nom = "Kuvalis",
                            prenom = "Lawrence",
                            tel = "505.405.3419 x8823"
                        },
                        new
                        {
                            id = 23,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE458601",
                            email = "Willie7@yahoo.com",
                            nom = "Douglas",
                            prenom = "Willie",
                            tel = "906.949.5940"
                        },
                        new
                        {
                            id = 24,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE956597",
                            email = "Sherry.Pagac@yahoo.com",
                            nom = "Pagac",
                            prenom = "Sherry",
                            tel = "755-251-8975"
                        },
                        new
                        {
                            id = 25,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE901454",
                            email = "Heather.Leannon@hotmail.com",
                            nom = "Leannon",
                            prenom = "Heather",
                            tel = "(604) 581-7525 x19466"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            id = 1,
                            valeur = "DS1"
                        },
                        new
                        {
                            id = 2,
                            valeur = "DS2"
                        },
                        new
                        {
                            id = 3,
                            valeur = "RAT"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Absence", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Etudiant", "Etudiant")
                        .WithMany("absences")
                        .HasForeignKey("id_etudiant");

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Document", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Etudiant", "Etudiant")
                        .WithMany("documents")
                        .HasForeignKey("id_etudiant");

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Inscription", "Inscription")
                        .WithMany("etudiants")
                        .HasForeignKey("id_inscription");

                    b.Navigation("Inscription");
                });

            modelBuilder.Entity("GestionEtudiants.Models.FiliereModule", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Filiere", "Filiere")
                        .WithMany("FiliereModules")
                        .HasForeignKey("FiliereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEtudiants.Models.Module", "Module")
                        .WithMany("FiliereModules")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Filiere", "Filiere")
                        .WithMany("inscriptions")
                        .HasForeignKey("id_filiere");

                    b.Navigation("Filiere");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Professeur", "Professeur")
                        .WithMany("modules")
                        .HasForeignKey("id_professeur");

                    b.Navigation("Professeur");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Note", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Module", "Module")
                        .WithMany("notes")
                        .HasForeignKey("id_module");

                    b.HasOne("GestionEtudiants.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("id_type");

                    b.Navigation("Module");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.Navigation("absences");

                    b.Navigation("documents");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Filiere", b =>
                {
                    b.Navigation("FiliereModules");

                    b.Navigation("inscriptions");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.Navigation("etudiants");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.Navigation("FiliereModules");

                    b.Navigation("notes");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Professeur", b =>
                {
                    b.Navigation("modules");
                });
#pragma warning restore 612, 618
        }
    }
}
