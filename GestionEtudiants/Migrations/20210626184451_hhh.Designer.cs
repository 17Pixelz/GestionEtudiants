// <auto-generated />
using System;
using GestionEtudiants.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionEtudiants.Migrations
{
    [DbContext(typeof(myContext))]
    [Migration("20210626184451_hhh")]
    partial class hhh
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestionEtudiants.Models.Absence", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("N_fois")
                        .HasColumnType("int");

                    b.Property<int?>("id_etudiant")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_etudiant");

                    b.ToTable("Absences");

                    b.HasData(
                        new
                        {
                            id = 1,
                            N_fois = 0,
                            id_etudiant = 2000
                        },
                        new
                        {
                            id = 2,
                            N_fois = 13,
                            id_etudiant = 2002
                        },
                        new
                        {
                            id = 3,
                            N_fois = 6,
                            id_etudiant = 2005
                        },
                        new
                        {
                            id = 4,
                            N_fois = 15,
                            id_etudiant = 2002
                        },
                        new
                        {
                            id = 5,
                            N_fois = 2,
                            id_etudiant = 2002
                        },
                        new
                        {
                            id = 6,
                            N_fois = 13,
                            id_etudiant = 2001
                        },
                        new
                        {
                            id = 7,
                            N_fois = 7,
                            id_etudiant = 2004
                        },
                        new
                        {
                            id = 8,
                            N_fois = 12,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 9,
                            N_fois = 8,
                            id_etudiant = 2008
                        },
                        new
                        {
                            id = 10,
                            N_fois = 9,
                            id_etudiant = 2002
                        },
                        new
                        {
                            id = 11,
                            N_fois = 6,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 12,
                            N_fois = 9,
                            id_etudiant = 2009
                        },
                        new
                        {
                            id = 13,
                            N_fois = 9,
                            id_etudiant = 2000
                        },
                        new
                        {
                            id = 14,
                            N_fois = 6,
                            id_etudiant = 2002
                        },
                        new
                        {
                            id = 15,
                            N_fois = 11,
                            id_etudiant = 2006
                        },
                        new
                        {
                            id = 16,
                            N_fois = 1,
                            id_etudiant = 2001
                        },
                        new
                        {
                            id = 17,
                            N_fois = 2,
                            id_etudiant = 2009
                        },
                        new
                        {
                            id = 18,
                            N_fois = 9,
                            id_etudiant = 2005
                        },
                        new
                        {
                            id = 19,
                            N_fois = 9,
                            id_etudiant = 2008
                        },
                        new
                        {
                            id = 20,
                            N_fois = 3,
                            id_etudiant = 2007
                        },
                        new
                        {
                            id = 21,
                            N_fois = 14,
                            id_etudiant = 2008
                        },
                        new
                        {
                            id = 22,
                            N_fois = 11,
                            id_etudiant = 2004
                        },
                        new
                        {
                            id = 23,
                            N_fois = 4,
                            id_etudiant = 2002
                        },
                        new
                        {
                            id = 24,
                            N_fois = 15,
                            id_etudiant = 2001
                        },
                        new
                        {
                            id = 25,
                            N_fois = 7,
                            id_etudiant = 2001
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Document", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_etudiant")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_etudiant");

                    b.ToTable("Documents");

                    b.HasData(
                        new
                        {
                            id = 1,
                            id_etudiant = 2008,
                            type = "C"
                        },
                        new
                        {
                            id = 2,
                            id_etudiant = 2001,
                            type = "B"
                        },
                        new
                        {
                            id = 3,
                            id_etudiant = 2002,
                            type = "C"
                        },
                        new
                        {
                            id = 4,
                            id_etudiant = 2009,
                            type = "B"
                        },
                        new
                        {
                            id = 5,
                            id_etudiant = 2002,
                            type = "B"
                        },
                        new
                        {
                            id = 6,
                            id_etudiant = 2007,
                            type = "A"
                        },
                        new
                        {
                            id = 7,
                            id_etudiant = 2005,
                            type = "B"
                        },
                        new
                        {
                            id = 8,
                            id_etudiant = 2007,
                            type = "A"
                        },
                        new
                        {
                            id = 9,
                            id_etudiant = 2004,
                            type = "C"
                        },
                        new
                        {
                            id = 10,
                            id_etudiant = 2002,
                            type = "C"
                        },
                        new
                        {
                            id = 11,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 12,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 13,
                            id_etudiant = 2005,
                            type = "B"
                        },
                        new
                        {
                            id = 14,
                            id_etudiant = 2001,
                            type = "A"
                        },
                        new
                        {
                            id = 15,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 16,
                            id_etudiant = 2002,
                            type = "A"
                        },
                        new
                        {
                            id = 17,
                            id_etudiant = 2005,
                            type = "C"
                        },
                        new
                        {
                            id = 18,
                            id_etudiant = 2002,
                            type = "C"
                        },
                        new
                        {
                            id = 19,
                            id_etudiant = 2009,
                            type = "C"
                        },
                        new
                        {
                            id = 20,
                            id_etudiant = 2003,
                            type = "A"
                        },
                        new
                        {
                            id = 21,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 22,
                            id_etudiant = 2008,
                            type = "A"
                        },
                        new
                        {
                            id = 23,
                            id_etudiant = 2001,
                            type = "B"
                        },
                        new
                        {
                            id = 24,
                            id_etudiant = 2001,
                            type = "B"
                        },
                        new
                        {
                            id = 25,
                            id_etudiant = 2005,
                            type = "A"
                        },
                        new
                        {
                            id = 26,
                            id_etudiant = 2004,
                            type = "A"
                        },
                        new
                        {
                            id = 27,
                            id_etudiant = 2002,
                            type = "A"
                        },
                        new
                        {
                            id = 28,
                            id_etudiant = 2001,
                            type = "A"
                        },
                        new
                        {
                            id = 29,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 30,
                            id_etudiant = 2002,
                            type = "C"
                        },
                        new
                        {
                            id = 31,
                            id_etudiant = 2003,
                            type = "A"
                        },
                        new
                        {
                            id = 32,
                            id_etudiant = 2002,
                            type = "B"
                        },
                        new
                        {
                            id = 33,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 34,
                            id_etudiant = 2000,
                            type = "C"
                        },
                        new
                        {
                            id = 35,
                            id_etudiant = 2009,
                            type = "C"
                        },
                        new
                        {
                            id = 36,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 37,
                            id_etudiant = 2004,
                            type = "A"
                        },
                        new
                        {
                            id = 38,
                            id_etudiant = 2005,
                            type = "A"
                        },
                        new
                        {
                            id = 39,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 40,
                            id_etudiant = 2001,
                            type = "A"
                        },
                        new
                        {
                            id = 41,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 42,
                            id_etudiant = 2000,
                            type = "C"
                        },
                        new
                        {
                            id = 43,
                            id_etudiant = 2006,
                            type = "A"
                        },
                        new
                        {
                            id = 44,
                            id_etudiant = 2005,
                            type = "C"
                        },
                        new
                        {
                            id = 45,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 46,
                            id_etudiant = 2001,
                            type = "A"
                        },
                        new
                        {
                            id = 47,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 48,
                            id_etudiant = 2007,
                            type = "A"
                        },
                        new
                        {
                            id = 49,
                            id_etudiant = 2009,
                            type = "A"
                        },
                        new
                        {
                            id = 50,
                            id_etudiant = 2007,
                            type = "C"
                        },
                        new
                        {
                            id = 51,
                            id_etudiant = 2003,
                            type = "A"
                        },
                        new
                        {
                            id = 52,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 53,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 54,
                            id_etudiant = 2008,
                            type = "A"
                        },
                        new
                        {
                            id = 55,
                            id_etudiant = 2004,
                            type = "A"
                        },
                        new
                        {
                            id = 56,
                            id_etudiant = 2004,
                            type = "C"
                        },
                        new
                        {
                            id = 57,
                            id_etudiant = 2006,
                            type = "B"
                        },
                        new
                        {
                            id = 58,
                            id_etudiant = 2002,
                            type = "A"
                        },
                        new
                        {
                            id = 59,
                            id_etudiant = 2003,
                            type = "B"
                        },
                        new
                        {
                            id = 60,
                            id_etudiant = 2005,
                            type = "A"
                        },
                        new
                        {
                            id = 61,
                            id_etudiant = 2004,
                            type = "C"
                        },
                        new
                        {
                            id = 62,
                            id_etudiant = 2001,
                            type = "B"
                        },
                        new
                        {
                            id = 63,
                            id_etudiant = 2009,
                            type = "C"
                        },
                        new
                        {
                            id = 64,
                            id_etudiant = 2003,
                            type = "C"
                        },
                        new
                        {
                            id = 65,
                            id_etudiant = 2004,
                            type = "A"
                        },
                        new
                        {
                            id = 66,
                            id_etudiant = 2005,
                            type = "A"
                        },
                        new
                        {
                            id = 67,
                            id_etudiant = 2003,
                            type = "A"
                        },
                        new
                        {
                            id = 68,
                            id_etudiant = 2008,
                            type = "C"
                        },
                        new
                        {
                            id = 69,
                            id_etudiant = 2004,
                            type = "B"
                        },
                        new
                        {
                            id = 70,
                            id_etudiant = 2007,
                            type = "B"
                        },
                        new
                        {
                            id = 71,
                            id_etudiant = 2001,
                            type = "B"
                        },
                        new
                        {
                            id = 72,
                            id_etudiant = 2000,
                            type = "B"
                        },
                        new
                        {
                            id = 73,
                            id_etudiant = 2006,
                            type = "C"
                        },
                        new
                        {
                            id = 74,
                            id_etudiant = 2004,
                            type = "B"
                        },
                        new
                        {
                            id = 75,
                            id_etudiant = 2000,
                            type = "C"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.Property<int>("apogee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("academie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("annee_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ddn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("delegation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("diplome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ecole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("father_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("filiere")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstname_fr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_inscription")
                        .HasColumnType("int");

                    b.Property<string>("lastname_ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastname_fr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ldn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lycee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("massar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mention_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_job")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mother_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("natio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parents_adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("parents_phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sexe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type_bac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("validated")
                        .HasColumnType("int");

                    b.Property<string>("ville_diplome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("apogee");

                    b.HasIndex("id_inscription");

                    b.ToTable("Etudiants");

                    b.HasData(
                        new
                        {
                            apogee = 2000,
                            cin = "EE27342",
                            email = "Kerry68@gmail.com",
                            id_inscription = 2,
                            nom = "Koelpin",
                            password = "0000",
                            prenom = "Kerry",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2001,
                            cin = "EE14977",
                            email = "Heidi.Paucek@yahoo.com",
                            id_inscription = 2,
                            nom = "Paucek",
                            password = "0000",
                            prenom = "Heidi",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2002,
                            cin = "EE46653",
                            email = "Tara.Sanford@gmail.com",
                            id_inscription = 10,
                            nom = "Sanford",
                            password = "0000",
                            prenom = "Tara",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2003,
                            cin = "EE42448",
                            email = "Dallas_Morar@hotmail.com",
                            id_inscription = 10,
                            nom = "Morar",
                            password = "0000",
                            prenom = "Dallas",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2004,
                            cin = "EE19820",
                            email = "Boyd.Casper58@yahoo.com",
                            id_inscription = 9,
                            nom = "Casper",
                            password = "0000",
                            prenom = "Boyd",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2005,
                            cin = "EE45643",
                            email = "Antoinette_Olson@yahoo.com",
                            id_inscription = 7,
                            nom = "Olson",
                            password = "0000",
                            prenom = "Antoinette",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2006,
                            cin = "EE10455",
                            email = "Darin64@gmail.com",
                            id_inscription = 6,
                            nom = "Deckow",
                            password = "0000",
                            prenom = "Darin",
                            sexe = "Male",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2007,
                            cin = "EE10078",
                            email = "Doreen_Nader42@hotmail.com",
                            id_inscription = 6,
                            nom = "Nader",
                            password = "0000",
                            prenom = "Doreen",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2008,
                            cin = "EE50887",
                            email = "Beulah36@hotmail.com",
                            id_inscription = 5,
                            nom = "Kreiger",
                            password = "0000",
                            prenom = "Beulah",
                            sexe = "Female",
                            validated = 1
                        },
                        new
                        {
                            apogee = 2009,
                            cin = "EE23933",
                            email = "Matthew_Mueller15@gmail.com",
                            id_inscription = 2,
                            nom = "Mueller",
                            password = "0000",
                            prenom = "Matthew",
                            sexe = "Male",
                            validated = 1
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Filiere", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Filieres");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nom = "GINFO"
                        },
                        new
                        {
                            id = 2,
                            nom = "GTR"
                        },
                        new
                        {
                            id = 3,
                            nom = "GPMC"
                        },
                        new
                        {
                            id = 4,
                            nom = "GINDUS"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.FiliereModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FiliereId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FiliereId");

                    b.HasIndex("ModuleId");

                    b.ToTable("FiliereModules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FiliereId = 4,
                            ModuleId = 3
                        },
                        new
                        {
                            Id = 2,
                            FiliereId = 1,
                            ModuleId = 9
                        },
                        new
                        {
                            Id = 3,
                            FiliereId = 4,
                            ModuleId = 10
                        },
                        new
                        {
                            Id = 4,
                            FiliereId = 2,
                            ModuleId = 11
                        },
                        new
                        {
                            Id = 5,
                            FiliereId = 3,
                            ModuleId = 7
                        },
                        new
                        {
                            Id = 6,
                            FiliereId = 4,
                            ModuleId = 7
                        },
                        new
                        {
                            Id = 7,
                            FiliereId = 3,
                            ModuleId = 8
                        },
                        new
                        {
                            Id = 8,
                            FiliereId = 1,
                            ModuleId = 2
                        },
                        new
                        {
                            Id = 9,
                            FiliereId = 1,
                            ModuleId = 6
                        },
                        new
                        {
                            Id = 10,
                            FiliereId = 1,
                            ModuleId = 9
                        },
                        new
                        {
                            Id = 11,
                            FiliereId = 1,
                            ModuleId = 9
                        },
                        new
                        {
                            Id = 12,
                            FiliereId = 3,
                            ModuleId = 11
                        },
                        new
                        {
                            Id = 13,
                            FiliereId = 4,
                            ModuleId = 1
                        },
                        new
                        {
                            Id = 14,
                            FiliereId = 2,
                            ModuleId = 12
                        },
                        new
                        {
                            Id = 15,
                            FiliereId = 1,
                            ModuleId = 2
                        },
                        new
                        {
                            Id = 16,
                            FiliereId = 2,
                            ModuleId = 4
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("annee_uni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_filiere")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("id_filiere");

                    b.ToTable("Inscriptions");

                    b.HasData(
                        new
                        {
                            id = 1,
                            annee_uni = "2020/2021",
                            id_filiere = 1
                        },
                        new
                        {
                            id = 2,
                            annee_uni = "2020/2021",
                            id_filiere = 1
                        },
                        new
                        {
                            id = 3,
                            annee_uni = "2020/2021",
                            id_filiere = 1
                        },
                        new
                        {
                            id = 4,
                            annee_uni = "2020/2021",
                            id_filiere = 3
                        },
                        new
                        {
                            id = 5,
                            annee_uni = "2020/2021",
                            id_filiere = 4
                        },
                        new
                        {
                            id = 6,
                            annee_uni = "2020/2021",
                            id_filiere = 1
                        },
                        new
                        {
                            id = 7,
                            annee_uni = "2020/2021",
                            id_filiere = 3
                        },
                        new
                        {
                            id = 8,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        },
                        new
                        {
                            id = 9,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        },
                        new
                        {
                            id = 10,
                            annee_uni = "2020/2021",
                            id_filiere = 2
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("id_professeur")
                        .HasColumnType("int");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_professeur");

                    b.ToTable("Modules");

                    b.HasData(
                        new
                        {
                            id = 1,
                            id_professeur = 1,
                            nom = "feed Morocco multi-byte"
                        },
                        new
                        {
                            id = 2,
                            id_professeur = 23,
                            nom = "parse Awesome Investor"
                        },
                        new
                        {
                            id = 3,
                            id_professeur = 19,
                            nom = "calculating port Branding"
                        },
                        new
                        {
                            id = 4,
                            id_professeur = 17,
                            nom = "Bedfordshire Zambian Kwacha Quality"
                        },
                        new
                        {
                            id = 5,
                            id_professeur = 24,
                            nom = "Sudanese Pound Ergonomic Unbranded"
                        },
                        new
                        {
                            id = 6,
                            id_professeur = 1,
                            nom = "full-range IB vortals"
                        },
                        new
                        {
                            id = 7,
                            id_professeur = 9,
                            nom = "digital Berkshire Virgin Islands, U.S."
                        },
                        new
                        {
                            id = 8,
                            id_professeur = 7,
                            nom = "Cotton Green evolve"
                        },
                        new
                        {
                            id = 9,
                            id_professeur = 2,
                            nom = "engineer Auto Loan Account PCI"
                        },
                        new
                        {
                            id = 10,
                            id_professeur = 14,
                            nom = "zero tolerance Buckinghamshire invoice"
                        },
                        new
                        {
                            id = 11,
                            id_professeur = 18,
                            nom = "solution-oriented relationships magenta"
                        },
                        new
                        {
                            id = 12,
                            id_professeur = 15,
                            nom = "Intelligent Investment Account card"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Note", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("evaluation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id_module")
                        .HasColumnType("int");

                    b.Property<int?>("id_type")
                        .HasColumnType("int");

                    b.Property<string>("semestre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("id_module");

                    b.HasIndex("id_type");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            evaluation = "Uzbekistan Sum",
                            id_module = 7,
                            id_type = 3,
                            semestre = "0",
                            valeur = "14"
                        },
                        new
                        {
                            id = 2,
                            evaluation = "Designer",
                            id_module = 8,
                            id_type = 1,
                            semestre = "2",
                            valeur = "1"
                        },
                        new
                        {
                            id = 3,
                            evaluation = "Designer",
                            id_module = 7,
                            id_type = 1,
                            semestre = "2",
                            valeur = "18"
                        },
                        new
                        {
                            id = 4,
                            evaluation = "Delaware",
                            id_module = 10,
                            id_type = 3,
                            semestre = "0",
                            valeur = "16"
                        },
                        new
                        {
                            id = 5,
                            evaluation = "logistical",
                            id_module = 5,
                            id_type = 2,
                            semestre = "0",
                            valeur = "20"
                        },
                        new
                        {
                            id = 6,
                            evaluation = "Villages",
                            id_module = 2,
                            id_type = 1,
                            semestre = "1",
                            valeur = "9"
                        },
                        new
                        {
                            id = 7,
                            evaluation = "model",
                            id_module = 2,
                            id_type = 3,
                            semestre = "2",
                            valeur = "13"
                        },
                        new
                        {
                            id = 8,
                            evaluation = "Metal",
                            id_module = 6,
                            id_type = 3,
                            semestre = "1",
                            valeur = "3"
                        },
                        new
                        {
                            id = 9,
                            evaluation = "Oklahoma",
                            id_module = 3,
                            id_type = 1,
                            semestre = "2",
                            valeur = "11"
                        },
                        new
                        {
                            id = 10,
                            evaluation = "Health & Music",
                            id_module = 10,
                            id_type = 2,
                            semestre = "2",
                            valeur = "13"
                        },
                        new
                        {
                            id = 11,
                            evaluation = "utilize",
                            id_module = 4,
                            id_type = 2,
                            semestre = "0",
                            valeur = "10"
                        },
                        new
                        {
                            id = 12,
                            evaluation = "paradigms",
                            id_module = 9,
                            id_type = 1,
                            semestre = "1",
                            valeur = "15"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Professeur", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Proffesseurs");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE360963",
                            email = "Wayne_Hauck@yahoo.com",
                            nom = "Hauck",
                            prenom = "Wayne",
                            tel = "905.906.5853 x35030"
                        },
                        new
                        {
                            id = 2,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE958322",
                            email = "Alfredo_Kunde@yahoo.com",
                            nom = "Kunde",
                            prenom = "Alfredo",
                            tel = "878-530-2240"
                        },
                        new
                        {
                            id = 3,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE348965",
                            email = "Kristina57@gmail.com",
                            nom = "Bergnaum",
                            prenom = "Kristina",
                            tel = "1-588-687-9310 x311"
                        },
                        new
                        {
                            id = 4,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE358690",
                            email = "Nick_Johnston19@yahoo.com",
                            nom = "Johnston",
                            prenom = "Nick",
                            tel = "(570) 681-0178"
                        },
                        new
                        {
                            id = 5,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE260403",
                            email = "Allan.Barton90@yahoo.com",
                            nom = "Barton",
                            prenom = "Allan",
                            tel = "(262) 790-1517 x3265"
                        },
                        new
                        {
                            id = 6,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE967424",
                            email = "Jennie.Russel33@gmail.com",
                            nom = "Russel",
                            prenom = "Jennie",
                            tel = "(602) 211-5066 x72655"
                        },
                        new
                        {
                            id = 7,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE843844",
                            email = "Grace.Littel72@yahoo.com",
                            nom = "Littel",
                            prenom = "Grace",
                            tel = "1-835-334-2333 x282"
                        },
                        new
                        {
                            id = 8,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE573610",
                            email = "Darnell.Fahey@gmail.com",
                            nom = "Fahey",
                            prenom = "Darnell",
                            tel = "1-275-948-6848"
                        },
                        new
                        {
                            id = 9,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE937564",
                            email = "Joey_Lebsack@yahoo.com",
                            nom = "Lebsack",
                            prenom = "Joey",
                            tel = "1-568-992-2506 x61749"
                        },
                        new
                        {
                            id = 10,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE973727",
                            email = "Jennie66@gmail.com",
                            nom = "Littel",
                            prenom = "Jennie",
                            tel = "(740) 607-8435"
                        },
                        new
                        {
                            id = 11,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE468767",
                            email = "Katherine.Runolfsson@yahoo.com",
                            nom = "Runolfsson",
                            prenom = "Katherine",
                            tel = "233-774-9561 x17292"
                        },
                        new
                        {
                            id = 12,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE326575",
                            email = "Carl.Kerluke44@hotmail.com",
                            nom = "Kerluke",
                            prenom = "Carl",
                            tel = "818.659.7302 x35116"
                        },
                        new
                        {
                            id = 13,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE946990",
                            email = "Erika_Runolfsson@hotmail.com",
                            nom = "Runolfsson",
                            prenom = "Erika",
                            tel = "(519) 235-0880"
                        },
                        new
                        {
                            id = 14,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE522601",
                            email = "Shane53@yahoo.com",
                            nom = "Mills",
                            prenom = "Shane",
                            tel = "958-461-1520 x50205"
                        },
                        new
                        {
                            id = 15,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE899039",
                            email = "Robin68@yahoo.com",
                            nom = "Flatley",
                            prenom = "Robin",
                            tel = "1-644-461-1573"
                        },
                        new
                        {
                            id = 16,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE848039",
                            email = "Marty.Herzog16@gmail.com",
                            nom = "Herzog",
                            prenom = "Marty",
                            tel = "(470) 990-6470"
                        },
                        new
                        {
                            id = 17,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE882451",
                            email = "Hubert.OHara@yahoo.com",
                            nom = "O'Hara",
                            prenom = "Hubert",
                            tel = "504-768-6786 x026"
                        },
                        new
                        {
                            id = 18,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE928407",
                            email = "Brooke.Schneider9@gmail.com",
                            nom = "Schneider",
                            prenom = "Brooke",
                            tel = "535-670-4619 x52946"
                        },
                        new
                        {
                            id = 19,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE544370",
                            email = "Brooke_Yundt@yahoo.com",
                            nom = "Yundt",
                            prenom = "Brooke",
                            tel = "269.860.3089"
                        },
                        new
                        {
                            id = 20,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE22384",
                            email = "Ella.Kutch4@yahoo.com",
                            nom = "Kutch",
                            prenom = "Ella",
                            tel = "1-983-550-5930 x006"
                        },
                        new
                        {
                            id = 21,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE97510",
                            email = "Sonia_Wuckert29@gmail.com",
                            nom = "Wuckert",
                            prenom = "Sonia",
                            tel = "383-920-9067 x267"
                        },
                        new
                        {
                            id = 22,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE383023",
                            email = "Suzanne21@hotmail.com",
                            nom = "Hilpert",
                            prenom = "Suzanne",
                            tel = "(297) 330-0581 x96395"
                        },
                        new
                        {
                            id = 23,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE527471",
                            email = "Karl.Kovacek25@yahoo.com",
                            nom = "Kovacek",
                            prenom = "Karl",
                            tel = "1-866-715-1156"
                        },
                        new
                        {
                            id = 24,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE948638",
                            email = "Loren.Toy@gmail.com",
                            nom = "Toy",
                            prenom = "Loren",
                            tel = "323-859-8294"
                        },
                        new
                        {
                            id = 25,
                            address = "Bogus.Person+CardAddress",
                            cin = "EE831556",
                            email = "Tyrone15@hotmail.com",
                            nom = "Jacobi",
                            prenom = "Tyrone",
                            tel = "(882) 370-9035 x76299"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Type", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            id = 1,
                            valeur = "DS1"
                        },
                        new
                        {
                            id = 2,
                            valeur = "DS2"
                        },
                        new
                        {
                            id = 3,
                            valeur = "RAT"
                        });
                });

            modelBuilder.Entity("GestionEtudiants.Models.Absence", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Etudiant", "Etudiant")
                        .WithMany("absences")
                        .HasForeignKey("id_etudiant");

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Document", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Etudiant", "Etudiant")
                        .WithMany("documents")
                        .HasForeignKey("id_etudiant");

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Inscription", "Inscription")
                        .WithMany("etudiants")
                        .HasForeignKey("id_inscription");

                    b.Navigation("Inscription");
                });

            modelBuilder.Entity("GestionEtudiants.Models.FiliereModule", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Filiere", "Filiere")
                        .WithMany("FiliereModules")
                        .HasForeignKey("FiliereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEtudiants.Models.Module", "Module")
                        .WithMany("FiliereModules")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filiere");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Filiere", "Filiere")
                        .WithMany("inscriptions")
                        .HasForeignKey("id_filiere");

                    b.Navigation("Filiere");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Professeur", "Professeur")
                        .WithMany("modules")
                        .HasForeignKey("id_professeur");

                    b.Navigation("Professeur");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Note", b =>
                {
                    b.HasOne("GestionEtudiants.Models.Module", "Module")
                        .WithMany("notes")
                        .HasForeignKey("id_module");

                    b.HasOne("GestionEtudiants.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("id_type");

                    b.Navigation("Module");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Etudiant", b =>
                {
                    b.Navigation("absences");

                    b.Navigation("documents");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Filiere", b =>
                {
                    b.Navigation("FiliereModules");

                    b.Navigation("inscriptions");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Inscription", b =>
                {
                    b.Navigation("etudiants");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Module", b =>
                {
                    b.Navigation("FiliereModules");

                    b.Navigation("notes");
                });

            modelBuilder.Entity("GestionEtudiants.Models.Professeur", b =>
                {
                    b.Navigation("modules");
                });
#pragma warning restore 612, 618
        }
    }
}
